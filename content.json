[{"title":"1016. Phone Bills","date":"2017-12-01T12:24:47.000Z","path":"2017/12/01/1016-Phone-Bills/","text":"英文描述1016. Phone Bills (25)A long-distance telephone company charges its customers by the following rules:Making a long-distance call costs a certain amount per minute, depending on the time of day when the call is made. When a customer starts connecting a long-distance call, the time will be recorded, and so will be the time when the customer hangs up the phone. Every calendar month, a bill is sent to the customer for each minute called (at a rate determined by the time of day). Your job is to prepare the bills for each month, given a set of phone call records.Input Specification:Each input file contains one test case. Each case has two parts: the rate structure, and the phone call records.The rate structure consists of a line with 24 non-negative integers denoting the toll (cents/minute) from 00:00 - 01:00, the toll from 01:00 - 02:00, and so on for each hour in the day.The next line contains a positive number N (&lt;= 1000), followed by N lines of records. Each phone call record consists of the name of the customer (string of up to 20 characters without space), the time and date (mm:dd:hh:mm), and the word “on-line” or “off-line”.For each test case, all dates will be within a single month. Each “on-line” record is paired with the chronologically next record for the same customer provided it is an “off-line” record. Any “on-line” records that are not paired with an “off-line” record are ignored, as are “off-line” records not paired with an “on-line” record. It is guaranteed that at least one call is well paired in the input. You may assume that no two records for the same customer have the same time. Times are recorded using a 24-hour clock.Output Specification:For each test case, you must print a phone bill for each customer.Bills must be printed in alphabetical order of customers’ names. For each customer, first print in a line the name of the customer and the month of the bill in the format shown by the sample. Then for each time period of a call, print in one line the beginning and ending time and date (dd:hh:mm), the lasting time (in minute) and the charge of the call. The calls must be listed in chronological order. Finally, print the total charge for the month in the format shown by the sample.Sample Input:10 10 10 10 10 10 20 20 20 15 15 15 15 15 15 15 20 30 20 15 15 10 10 1010CYLL 01:01:06:01 on-lineCYLL 01:28:16:05 off-lineCYJJ 01:01:07:00 off-lineCYLL 01:01:08:03 off-lineCYJJ 01:01:05:59 on-lineaaa 01:01:01:03 on-lineaaa 01:02:00:01 on-lineCYLL 01:28:15:41 on-lineaaa 01:05:02:24 on-lineaaa 01:04:23:59 off-lineSample Output:CYJJ 0101:05:59 01:07:00 61 $12.10Total amount: $12.10CYLL 0101:06:01 01:08:03 122 $24.4028:15:41 28:16:05 24 $3.85Total amount: $28.25aaa 0102:00:01 04:23:59 4318 $638.80Total amount: $638.80 中文描述电话账单一个长途电话公司的收费规则如下：一个长途电话的消费是根据每分钟的价钱来定计算的，这价钱依赖于一天中的不同时段。当一个顾客开始打电话的时候，这个时间会被电话公司记录，当顾客挂断电话时，这个时间也会被记录。每个月，带有每段通话记录的账单将会发送给客户，其中每段通话是根据一天中不同时间段来计算的。你的工作是准备每月的账单和手机通话记录的一个集合。输入规则：每个输入文件包含一个测试用例。每个用例有两个部分：比率结构体和手机通话记录。比率结构体是指在一行内有24个非负数的整数，这24个整数代表着长途电话费。第一个数字代表从00:00到01:00的电话费，第二个数字代表从01:00到02:00的电话费，依次类推。第24个数字就代表着23:00到00:00的电话费。这个包含关系好像没有说清楚，比如一个人从00:30开始打电话，打到了01:22。那么我想问其中的01:00算第一个数字的费用还是算第二个数字的费用？下一行包含一个正数N(&lt;= 1000),接着是N条记录。每条记录包含一个顾客的名字（由20个字符组成不包含空格），一个时间和日期（mm：dd：hh：mm），一个单词：在线或者下线。每个测试用例，所有的数据都在一个月中。每个在线记录和下线记录是按照时间先后顺序成对出现的。任何一个没有对应下线记录的在线记录都将被忽略，任何一个没有对应在线记录的下线记录也会被忽略。输入保证至少有一对在线记录和下线记录是对应的。你可以假设在同一时间没有任何两条记录是相同的。时间采用24小时制。输出规则：对于每个测试用例，你必须每个顾客的手机账单。打印账单必须按照顾客名字的字母顺序进行打印（大写在小写）。对于每个顾客，在第一行内输出顾客名字和月份，格式如输出样例。之后打印每个时间段的电话，在一行内打印开始和结束时间和日期（dd：hh：mm），最后打印时间（分钟）和收费。没通电话必须按照时间先后顺序排序（这里默认为通话时长的递减顺序）。最后一行打印每月的总收费，格式如样例输出。样例输入：10 10 10 10 10 10 20 20 20 15 15 15 15 15 15 15 20 30 20 15 15 10 10 1010CYLL 01:01:06:01 on-lineCYLL 01:28:16:05 off-lineCYJJ 01:01:07:00 off-lineCYLL 01:01:08:03 off-lineCYJJ 01:01:05:59 on-lineaaa 01:01:01:03 on-lineaaa 01:02:00:01 on-lineCYLL 01:28:15:41 on-lineaaa 01:05:02:24 on-lineaaa 01:04:23:59 off-line样例输出：CYJJ 0101:05:59 01:07:00 61 $12.10Total amount: $12.10CYLL 0101:06:01 01:08:03 122 $24.4028:15:41 28:16:05 24 $3.85Total amount: $28.25aaa 0102:00:01 04:23:59 4318 $638.80Total amount: $638.80"},{"title":"1015.Reversible Primes","date":"2017-12-01T11:11:03.000Z","path":"2017/12/01/1015-Reversible-Primes/","text":"英文描述1015 Reversible Primes (20)A reversible prime in any number system is a prime whose “reverse” in that number system is also a prime. For example in the decimal system 73 is a reversible prime because its reverse 37 is also a prime.Now given any two positive integers N (&lt; 10^5) and D (1 &lt; D &lt;= 10), you are supposed to tell if N is a reversible prime with radix D.Input Specification:The input file consists of several test cases. Each case occupies a line which contains two integers N and D. The input is finished by a negative N.Output Specification:For each test case, print in one line “Yes” if N is a reversible prime with radix D, or “No” if not.Sample Input:73 1023 223 10-2Sample Output:YesYesNo 中文描述反转素数在任何数字系统中一个可以反转的素数是指这个数字在那个系统中通过“反转”也是一个素数。举个例子，一个十进制系统中的一个数字73是一个可以反转的素数，因为他的反转数字37也是一个素数。现在有任意两个正整数N（&lt; 105）和D（1 &lt; D &lt;= 10），你要求得这个这个正数N是否是D进制的反转数。输入规格：一个输入文件包含一些测试用例。每个测试用例在一行内包含两个整数N和D，当输入的N为负数时，一位这个测试文件结束了。输出规格：对于每个测试用例，如果N是一个在D进制中可以反转的素数就输出“Yes”否则就输出“No”样例输入:73 1023 223 10-2样例输出:YesYesNo 分析与解题 输入的数字是一些十进制整数，也就是说不一定是素数，故先判断是否为素数 如果是素数，之后翻转这个数字，之后计算翻转后的数字是不是也是素数 翻转。题目给出的N是十进制数字，故先要把十进制数字转换为D进制数字。通过十进制变化为D进制数字的方法为：除D取余法（此处不再详细讨论）。得到的结果是一个翻转后的D进制数。再通过D进制数转换为十进制数的方法，D进制的各个位数乘上D的位置次方后再相加。D进制转换为10进制，从高位开始或者从低位开始都可以，但要需要记住D进制数字的位数。 最后判断翻转后的十进制数字是否为素数。ps：输出格式，之前都是将所有的输出存放在数组中，通过判断数值的标志值来输出，这次看了ZJU上的代码，发现可以判断一个输出一个。在人工调试的时候，这样的输出是伴随着输入一个就输出一个进行执行的，起初以为这样是违规的，这次试验后，发现也是可以通过的，所以之后可以看情况来采用这样的方法来进行输出。关于分析与代码的构造，看了ZJU的代码，发现代码的构造条理清晰明了，这点值得学习。期间有一个点没有通过，后来调试后，发现是结构问题，并不是解决主要问题的方法，比如判断是否为素数以及十进制转D进制出了问题，是在输入格式上出现了错误，自己看了ZJU的代码后，有意识的朝着它的代码去更改，最后虽然与ZJU的代码不同，但是我发觉那个没过去的点已经通过了，所以我想问题是出在了输入结构那边。C语言实现12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849505152535455565758#include&lt;stdio.h&gt;#include&lt;math.h&gt;int y[64] = &#123;0&#125;;int isprime(int p)&#123; if(p == 0 || p == 1) return 0; int i = 2; while(i &lt; p) &#123; if((p % i) == 0) return 0; i++; &#125; return 1;&#125;int main()&#123; int n, d; while(1) &#123; scanf(\"%d\", &amp;n); if(n &lt; 0) break; else scanf(\"%d\", &amp;d); if(isprime(n) == 1) &#123; //反转 int j = 0; while(n != 0) &#123; y[j] = n % d; n /= d; j++; &#125; //将反转数字转换为十进制数字 int k = 0; int sum = 0; j--; while(j &gt;= 0) &#123; sum += y[k] * (int)(pow(d, j)); j--; k++; &#125; //判断是否为素数 if(isprime(sum) == 1) puts(\"Yes\"); else puts(\"No\"); &#125; else puts(\"No\"); &#125; return 0;&#125; 测试链接click me"},{"title":"HelloWorld","date":"2017-11-25T02:47:11.000Z","path":"2017/11/25/helloworld/","text":"前言在初中二年级的时候，我酷爱写作，身边有一位好友也喜欢写写东西。有一次我们两在聊天，谈到写作的事情，我向他提议说，我觉得咱两写的不能算文章，为什么这样说呢，你看我们读鲁迅，那才叫文章，如果我们写的也叫文章，那岂不是辱没了迅哥，所以我们以后如果说我们写文章，就说写字，比如，我问他，你最近写有字吗？ 从你好世界开始荒诞而生猛在2010年我进入高中，开启了高中生活，刚好在一年半的时候我所在的高中倒闭了，我的同学们在一周之内都离开了学校，同学口中说：这儿要倒闭了。当到了开学第一周的周五的时候，我的同学们走完了，最后我卷起了铺盖回到了家中。学校之前没有任何通知，期间也没有说明，我们每位同学也没有办理任何手续，班主任没有动静。之后我进入了一所拥有普通高中和职业中专两种办学性质的学校，当时我选择了理科，因为之前在倒闭的高中并没有分科，在这里安静的度过了半年的时间。在即将迎来我高三生活的前夕，一次由校长组织的动员大会中，内容是校长鼓励我们这些来自普通高中的同学们转入职业高中就读，之后讲了很多国家对于职业学校的扶持政策。那是我第一次和校长近距离接触，会后，我走到她跟前，激动的对校长说，我要转入职业中专，学习计算机专业。校长拍了拍我的肩膀说，好同学，我现在就给你安排。之后校长找到我现在班主任和计算机班的班主任，把我这件事办好了，并指着我，鼓励大家像我学习，都转入职业高中。至此，在2012年的9月，我开始系统的学习计算机知识。 选择排序和冒泡排序出乎意料的事情发生在了我的身上，我由学渣逆袭成了学霸。在职业高中这里，学习了四门课程，vb程序设计，计算机网络，access数据库，组装与维修，这些都是职业高考将会考试的科目。其中组装与维修于我来学是比较容易学习的，原因是之前在这方面接触的较多。程序设计是自己最感兴趣的，当时就认为学习计算机的就应该是写程序的样子，计算机网络和access数据库学的很迷糊。有幸的事情是遇见了我们的vb程序设计老师，他之前是h3c的硬件开发工程师，在浙江大学读的研究生。"}]